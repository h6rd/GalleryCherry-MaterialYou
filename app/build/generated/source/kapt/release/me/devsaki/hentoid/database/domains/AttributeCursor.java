package me.devsaki.hentoid.database.domains;

import io.objectbox.BoxStore;
import io.objectbox.Cursor;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.relation.ToMany;
import io.objectbox.relation.ToOne;
import java.util.List;
import me.devsaki.hentoid.enums.AttributeType;
import me.devsaki.hentoid.enums.AttributeType.AttributeTypeConverter;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * ObjectBox generated Cursor implementation for "Attribute".
 * Note that this is a low-level class: usually you should stick to the Box class.
 */
public final class AttributeCursor extends Cursor<Attribute> {
    @Internal
    static final class Factory implements CursorFactory<Attribute> {
        @Override
        public Cursor<Attribute> createCursor(io.objectbox.Transaction tx, long cursorHandle, BoxStore boxStoreForEntities) {
            return new AttributeCursor(tx, cursorHandle, boxStoreForEntities);
        }
    }

    private static final Attribute_.AttributeIdGetter ID_GETTER = Attribute_.__ID_GETTER;

    private final AttributeTypeConverter typeConverter = new AttributeTypeConverter();

    private final static int __ID_name = Attribute_.name.id;
    private final static int __ID_type = Attribute_.type.id;
    private final static int __ID_groupId = Attribute_.groupId.id;

    public AttributeCursor(io.objectbox.Transaction tx, long cursor, BoxStore boxStore) {
        super(tx, cursor, Attribute_.__INSTANCE, boxStore);
    }

    @Override
    public long getId(Attribute entity) {
        return ID_GETTER.getId(entity);
    }

    /**
     * Puts an object into its box.
     *
     * @return The ID of the object within its box.
     */
    @SuppressWarnings({"rawtypes", "unchecked"}) 
    @Override
    public long put(Attribute entity) {
        ToOne<Group> group = entity.getGroup();
        if(group != null && group.internalRequiresPutTarget()) {
            Cursor<Group> targetCursor = getRelationTargetCursor(Group.class);
            try {
                group.internalPutTarget(targetCursor);
            } finally {
                targetCursor.close();
            }
        }
        String name = entity.getName();
        int __id1 = name != null ? __ID_name : 0;
        AttributeType type = entity.getType();
        int __id2 = type != null ? __ID_type : 0;

        long __assignedId = collect313311(cursor, entity.getId(), PUT_FLAG_FIRST | PUT_FLAG_COMPLETE,
                __id1, name, 0, null,
                0, null, 0, null,
                __ID_groupId, entity.getGroup().getTargetId(), __id2, __id2 != 0 ? typeConverter.convertToDatabaseValue(type) : 0,
                0, 0, 0, 0,
                0, 0, 0, 0,
                0, 0, 0, 0);

        entity.setId(__assignedId);

        attachEntity(entity);
        checkApplyToManyToDb(entity.getLocations(), AttributeLocation.class);
        checkApplyToManyToDb(entity.contents, Content.class);
        return __assignedId;
    }

    private void attachEntity(Attribute entity) {
        // Transformer will create __boxStore field in entity and init it here:
        // entity.__boxStore = boxStoreForEntities;
    }

}
