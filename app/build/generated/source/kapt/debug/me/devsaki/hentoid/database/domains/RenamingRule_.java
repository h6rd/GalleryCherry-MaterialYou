
package me.devsaki.hentoid.database.domains;

import io.objectbox.EntityInfo;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import io.objectbox.internal.IdGetter;
import me.devsaki.hentoid.database.domains.RenamingRuleCursor.Factory;
import me.devsaki.hentoid.enums.AttributeType;
import me.devsaki.hentoid.enums.AttributeType.AttributeTypeConverter;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * Properties for entity "RenamingRule". Can be used for QueryBuilder and for referencing DB names.
 */
public final class RenamingRule_ implements EntityInfo<RenamingRule> {

    // Leading underscores for static constants to avoid naming conflicts with property names

    public static final String __ENTITY_NAME = "RenamingRule";

    public static final int __ENTITY_ID = 17;

    public static final Class<RenamingRule> __ENTITY_CLASS = RenamingRule.class;

    public static final String __DB_NAME = "RenamingRule";

    public static final CursorFactory<RenamingRule> __CURSOR_FACTORY = new Factory();

    @Internal
    static final RenamingRuleIdGetter __ID_GETTER = new RenamingRuleIdGetter();

    public final static RenamingRule_ __INSTANCE = new RenamingRule_();

    public final static io.objectbox.Property<RenamingRule> id =
        new io.objectbox.Property<>(__INSTANCE, 0, 1, long.class, "id", true, "id");

    public final static io.objectbox.Property<RenamingRule> attributeType =
        new io.objectbox.Property<>(__INSTANCE, 1, 2, int.class, "attributeType", false, "attributeType", AttributeTypeConverter.class, AttributeType.class);

    public final static io.objectbox.Property<RenamingRule> sourceName =
        new io.objectbox.Property<>(__INSTANCE, 2, 3, String.class, "sourceName");

    public final static io.objectbox.Property<RenamingRule> targetName =
        new io.objectbox.Property<>(__INSTANCE, 3, 4, String.class, "targetName");

    @SuppressWarnings("unchecked")
    public final static io.objectbox.Property<RenamingRule>[] __ALL_PROPERTIES = new io.objectbox.Property[]{
        id,
        attributeType,
        sourceName,
        targetName
    };

    public final static io.objectbox.Property<RenamingRule> __ID_PROPERTY = id;

    @Override
    public String getEntityName() {
        return __ENTITY_NAME;
    }

    @Override
    public int getEntityId() {
        return __ENTITY_ID;
    }

    @Override
    public Class<RenamingRule> getEntityClass() {
        return __ENTITY_CLASS;
    }

    @Override
    public String getDbName() {
        return __DB_NAME;
    }

    @Override
    public io.objectbox.Property<RenamingRule>[] getAllProperties() {
        return __ALL_PROPERTIES;
    }

    @Override
    public io.objectbox.Property<RenamingRule> getIdProperty() {
        return __ID_PROPERTY;
    }

    @Override
    public IdGetter<RenamingRule> getIdGetter() {
        return __ID_GETTER;
    }

    @Override
    public CursorFactory<RenamingRule> getCursorFactory() {
        return __CURSOR_FACTORY;
    }

    @Internal
    static final class RenamingRuleIdGetter implements IdGetter<RenamingRule> {
        @Override
        public long getId(RenamingRule object) {
            return object.id;
        }
    }

}
