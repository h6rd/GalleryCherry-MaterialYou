package me.devsaki.hentoid.database.domains;

import io.objectbox.BoxStore;
import io.objectbox.Cursor;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * ObjectBox generated Cursor implementation for "DuplicateEntry".
 * Note that this is a low-level class: usually you should stick to the Box class.
 */
public final class DuplicateEntryCursor extends Cursor<DuplicateEntry> {
    @Internal
    static final class Factory implements CursorFactory<DuplicateEntry> {
        @Override
        public Cursor<DuplicateEntry> createCursor(io.objectbox.Transaction tx, long cursorHandle, BoxStore boxStoreForEntities) {
            return new DuplicateEntryCursor(tx, cursorHandle, boxStoreForEntities);
        }
    }

    private static final DuplicateEntry_.DuplicateEntryIdGetter ID_GETTER = DuplicateEntry_.__ID_GETTER;


    private final static int __ID_referenceId = DuplicateEntry_.referenceId.id;
    private final static int __ID_referenceSize = DuplicateEntry_.referenceSize.id;
    private final static int __ID_duplicateId = DuplicateEntry_.duplicateId.id;
    private final static int __ID_duplicateSize = DuplicateEntry_.duplicateSize.id;
    private final static int __ID_titleScore = DuplicateEntry_.titleScore.id;
    private final static int __ID_coverScore = DuplicateEntry_.coverScore.id;
    private final static int __ID_artistScore = DuplicateEntry_.artistScore.id;

    public DuplicateEntryCursor(io.objectbox.Transaction tx, long cursor, BoxStore boxStore) {
        super(tx, cursor, DuplicateEntry_.__INSTANCE, boxStore);
    }

    @Override
    public long getId(DuplicateEntry entity) {
        return ID_GETTER.getId(entity);
    }

    /**
     * Puts an object into its box.
     *
     * @return The ID of the object within its box.
     */
    @SuppressWarnings({"rawtypes", "unchecked"}) 
    @Override
    public long put(DuplicateEntry entity) {
        collect002033(cursor, 0, PUT_FLAG_FIRST,
                __ID_referenceId, entity.getReferenceId(), __ID_referenceSize, entity.getReferenceSize(),
                __ID_titleScore, entity.getTitleScore(), __ID_coverScore, entity.getCoverScore(),
                __ID_artistScore, entity.getArtistScore(), 0, 0,
                0, 0, 0, 0);

        long __assignedId = collect004000(cursor, entity.getId(), PUT_FLAG_COMPLETE,
                __ID_duplicateId, entity.getDuplicateId(), __ID_duplicateSize, entity.getDuplicateSize(),
                0, 0, 0, 0);

        entity.setId(__assignedId);

        return __assignedId;
    }

}
