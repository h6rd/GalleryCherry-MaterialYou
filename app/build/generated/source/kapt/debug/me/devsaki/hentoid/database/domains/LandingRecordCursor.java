package me.devsaki.hentoid.database.domains;

import io.objectbox.BoxStore;
import io.objectbox.Cursor;
import io.objectbox.annotation.apihint.Internal;
import io.objectbox.internal.CursorFactory;
import me.devsaki.hentoid.enums.Site;
import me.devsaki.hentoid.enums.Site.SiteConverter;

// THIS CODE IS GENERATED BY ObjectBox, DO NOT EDIT.

/**
 * ObjectBox generated Cursor implementation for "LandingRecord".
 * Note that this is a low-level class: usually you should stick to the Box class.
 */
public final class LandingRecordCursor extends Cursor<LandingRecord> {
    @Internal
    static final class Factory implements CursorFactory<LandingRecord> {
        @Override
        public Cursor<LandingRecord> createCursor(io.objectbox.Transaction tx, long cursorHandle, BoxStore boxStoreForEntities) {
            return new LandingRecordCursor(tx, cursorHandle, boxStoreForEntities);
        }
    }

    private static final LandingRecord_.LandingRecordIdGetter ID_GETTER = LandingRecord_.__ID_GETTER;

    private final SiteConverter siteConverter = new SiteConverter();

    private final static int __ID_site = LandingRecord_.site.id;
    private final static int __ID_url = LandingRecord_.url.id;
    private final static int __ID_lastAccessDate = LandingRecord_.lastAccessDate.id;

    public LandingRecordCursor(io.objectbox.Transaction tx, long cursor, BoxStore boxStore) {
        super(tx, cursor, LandingRecord_.__INSTANCE, boxStore);
    }

    @Override
    public long getId(LandingRecord entity) {
        return ID_GETTER.getId(entity);
    }

    /**
     * Puts an object into its box.
     *
     * @return The ID of the object within its box.
     */
    @SuppressWarnings({"rawtypes", "unchecked"}) 
    @Override
    public long put(LandingRecord entity) {
        String url = entity.url;
        int __id2 = url != null ? __ID_url : 0;
        Site site = entity.site;
        int __id1 = site != null ? __ID_site : 0;

        long __assignedId = collect313311(cursor, entity.id, PUT_FLAG_FIRST | PUT_FLAG_COMPLETE,
                __id2, url, 0, null,
                0, null, 0, null,
                __id1, __id1 != 0 ? siteConverter.convertToDatabaseValue(site) : 0, __ID_lastAccessDate, entity.lastAccessDate,
                0, 0, 0, 0,
                0, 0, 0, 0,
                0, 0, 0, 0);

        entity.id = __assignedId;

        return __assignedId;
    }

}
