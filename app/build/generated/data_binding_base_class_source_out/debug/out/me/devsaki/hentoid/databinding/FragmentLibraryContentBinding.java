// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;

public final class FragmentLibraryContentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView libraryEmptyTxt;

  @NonNull
  public final RecyclerView libraryList;

  @NonNull
  public final FloatingActionButton topFab;

  private FragmentLibraryContentBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView libraryEmptyTxt, @NonNull RecyclerView libraryList,
      @NonNull FloatingActionButton topFab) {
    this.rootView = rootView;
    this.libraryEmptyTxt = libraryEmptyTxt;
    this.libraryList = libraryList;
    this.topFab = topFab;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLibraryContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLibraryContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_library_content, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLibraryContentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.library_empty_txt;
      TextView libraryEmptyTxt = ViewBindings.findChildViewById(rootView, id);
      if (libraryEmptyTxt == null) {
        break missingId;
      }

      id = R.id.library_list;
      RecyclerView libraryList = ViewBindings.findChildViewById(rootView, id);
      if (libraryList == null) {
        break missingId;
      }

      id = R.id.top_fab;
      FloatingActionButton topFab = ViewBindings.findChildViewById(rootView, id);
      if (topFab == null) {
        break missingId;
      }

      return new FragmentLibraryContentBinding((ConstraintLayout) rootView, libraryEmptyTxt,
          libraryList, topFab);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
