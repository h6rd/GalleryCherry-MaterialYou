// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;

public final class ActivityPrefsStorageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton addExternal;

  @NonNull
  public final MaterialButton addPrimary1;

  @NonNull
  public final MaterialButton addPrimary2;

  @NonNull
  public final TextView alertDesc;

  @NonNull
  public final ImageView alertIcon;

  @NonNull
  public final ConstraintLayout alertLowPanel;

  @NonNull
  public final TextView alertTitle;

  @NonNull
  public final ImageView browseModeImg;

  @NonNull
  public final TextView browseModeWarning;

  @NonNull
  public final TextView externalLibrary;

  @NonNull
  public final TextView externalLibrarySubtitle;

  @NonNull
  public final ConstraintLayout externalVolume;

  @NonNull
  public final TextView primaryLibrary;

  @NonNull
  public final TextView primaryLibrarySubtitle;

  @NonNull
  public final ConstraintLayout primaryVolume1;

  @NonNull
  public final ConstraintLayout primaryVolume2;

  @NonNull
  public final TextView stats;

  @NonNull
  public final ImageView statsIcon;

  @NonNull
  public final ConstraintLayout statsPanel;

  @NonNull
  public final TextView statsTitle;

  @NonNull
  public final TextView strategyDesc;

  @NonNull
  public final ImageView strategyIcon;

  @NonNull
  public final ConstraintLayout strategyPanel;

  @NonNull
  public final TextView strategyTitle;

  @NonNull
  public final Toolbar toolbar;

  private ActivityPrefsStorageBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton addExternal, @NonNull MaterialButton addPrimary1,
      @NonNull MaterialButton addPrimary2, @NonNull TextView alertDesc,
      @NonNull ImageView alertIcon, @NonNull ConstraintLayout alertLowPanel,
      @NonNull TextView alertTitle, @NonNull ImageView browseModeImg,
      @NonNull TextView browseModeWarning, @NonNull TextView externalLibrary,
      @NonNull TextView externalLibrarySubtitle, @NonNull ConstraintLayout externalVolume,
      @NonNull TextView primaryLibrary, @NonNull TextView primaryLibrarySubtitle,
      @NonNull ConstraintLayout primaryVolume1, @NonNull ConstraintLayout primaryVolume2,
      @NonNull TextView stats, @NonNull ImageView statsIcon, @NonNull ConstraintLayout statsPanel,
      @NonNull TextView statsTitle, @NonNull TextView strategyDesc, @NonNull ImageView strategyIcon,
      @NonNull ConstraintLayout strategyPanel, @NonNull TextView strategyTitle,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.addExternal = addExternal;
    this.addPrimary1 = addPrimary1;
    this.addPrimary2 = addPrimary2;
    this.alertDesc = alertDesc;
    this.alertIcon = alertIcon;
    this.alertLowPanel = alertLowPanel;
    this.alertTitle = alertTitle;
    this.browseModeImg = browseModeImg;
    this.browseModeWarning = browseModeWarning;
    this.externalLibrary = externalLibrary;
    this.externalLibrarySubtitle = externalLibrarySubtitle;
    this.externalVolume = externalVolume;
    this.primaryLibrary = primaryLibrary;
    this.primaryLibrarySubtitle = primaryLibrarySubtitle;
    this.primaryVolume1 = primaryVolume1;
    this.primaryVolume2 = primaryVolume2;
    this.stats = stats;
    this.statsIcon = statsIcon;
    this.statsPanel = statsPanel;
    this.statsTitle = statsTitle;
    this.strategyDesc = strategyDesc;
    this.strategyIcon = strategyIcon;
    this.strategyPanel = strategyPanel;
    this.strategyTitle = strategyTitle;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPrefsStorageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPrefsStorageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_prefs_storage, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPrefsStorageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_external;
      MaterialButton addExternal = ViewBindings.findChildViewById(rootView, id);
      if (addExternal == null) {
        break missingId;
      }

      id = R.id.add_primary_1;
      MaterialButton addPrimary1 = ViewBindings.findChildViewById(rootView, id);
      if (addPrimary1 == null) {
        break missingId;
      }

      id = R.id.add_primary_2;
      MaterialButton addPrimary2 = ViewBindings.findChildViewById(rootView, id);
      if (addPrimary2 == null) {
        break missingId;
      }

      id = R.id.alert_desc;
      TextView alertDesc = ViewBindings.findChildViewById(rootView, id);
      if (alertDesc == null) {
        break missingId;
      }

      id = R.id.alert_icon;
      ImageView alertIcon = ViewBindings.findChildViewById(rootView, id);
      if (alertIcon == null) {
        break missingId;
      }

      id = R.id.alert_low_panel;
      ConstraintLayout alertLowPanel = ViewBindings.findChildViewById(rootView, id);
      if (alertLowPanel == null) {
        break missingId;
      }

      id = R.id.alert_title;
      TextView alertTitle = ViewBindings.findChildViewById(rootView, id);
      if (alertTitle == null) {
        break missingId;
      }

      id = R.id.browse_mode_img;
      ImageView browseModeImg = ViewBindings.findChildViewById(rootView, id);
      if (browseModeImg == null) {
        break missingId;
      }

      id = R.id.browse_mode_warning;
      TextView browseModeWarning = ViewBindings.findChildViewById(rootView, id);
      if (browseModeWarning == null) {
        break missingId;
      }

      id = R.id.external_library;
      TextView externalLibrary = ViewBindings.findChildViewById(rootView, id);
      if (externalLibrary == null) {
        break missingId;
      }

      id = R.id.external_library_subtitle;
      TextView externalLibrarySubtitle = ViewBindings.findChildViewById(rootView, id);
      if (externalLibrarySubtitle == null) {
        break missingId;
      }

      id = R.id.external_volume;
      ConstraintLayout externalVolume = ViewBindings.findChildViewById(rootView, id);
      if (externalVolume == null) {
        break missingId;
      }

      id = R.id.primary_library;
      TextView primaryLibrary = ViewBindings.findChildViewById(rootView, id);
      if (primaryLibrary == null) {
        break missingId;
      }

      id = R.id.primary_library_subtitle;
      TextView primaryLibrarySubtitle = ViewBindings.findChildViewById(rootView, id);
      if (primaryLibrarySubtitle == null) {
        break missingId;
      }

      id = R.id.primary_volume_1;
      ConstraintLayout primaryVolume1 = ViewBindings.findChildViewById(rootView, id);
      if (primaryVolume1 == null) {
        break missingId;
      }

      id = R.id.primary_volume_2;
      ConstraintLayout primaryVolume2 = ViewBindings.findChildViewById(rootView, id);
      if (primaryVolume2 == null) {
        break missingId;
      }

      id = R.id.stats;
      TextView stats = ViewBindings.findChildViewById(rootView, id);
      if (stats == null) {
        break missingId;
      }

      id = R.id.stats_icon;
      ImageView statsIcon = ViewBindings.findChildViewById(rootView, id);
      if (statsIcon == null) {
        break missingId;
      }

      id = R.id.stats_panel;
      ConstraintLayout statsPanel = ViewBindings.findChildViewById(rootView, id);
      if (statsPanel == null) {
        break missingId;
      }

      id = R.id.stats_title;
      TextView statsTitle = ViewBindings.findChildViewById(rootView, id);
      if (statsTitle == null) {
        break missingId;
      }

      id = R.id.strategy_desc;
      TextView strategyDesc = ViewBindings.findChildViewById(rootView, id);
      if (strategyDesc == null) {
        break missingId;
      }

      id = R.id.strategy_icon;
      ImageView strategyIcon = ViewBindings.findChildViewById(rootView, id);
      if (strategyIcon == null) {
        break missingId;
      }

      id = R.id.strategy_panel;
      ConstraintLayout strategyPanel = ViewBindings.findChildViewById(rootView, id);
      if (strategyPanel == null) {
        break missingId;
      }

      id = R.id.strategy_title;
      TextView strategyTitle = ViewBindings.findChildViewById(rootView, id);
      if (strategyTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityPrefsStorageBinding((ConstraintLayout) rootView, addExternal, addPrimary1,
          addPrimary2, alertDesc, alertIcon, alertLowPanel, alertTitle, browseModeImg,
          browseModeWarning, externalLibrary, externalLibrarySubtitle, externalVolume,
          primaryLibrary, primaryLibrarySubtitle, primaryVolume1, primaryVolume2, stats, statsIcon,
          statsPanel, statsTitle, strategyDesc, strategyIcon, strategyPanel, strategyTitle,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
