// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.slider.Slider;
import com.skydoves.submarine.SubmarineView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;

public final class IncludeReaderControlsOverlayBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton favouriteActionBtn;

  @NonNull
  public final SubmarineView favouriteMicroMenu;

  @NonNull
  public final ImageButton galleryBtn;

  @NonNull
  public final ImageView imagePreviewCenter;

  @NonNull
  public final ImageView imagePreviewLeft;

  @NonNull
  public final ImageView imagePreviewRight;

  @NonNull
  public final ImageButton infoBtn;

  @NonNull
  public final SubmarineView informationMicroMenu;

  @NonNull
  public final ImageButton nextBookBtn;

  @NonNull
  public final Slider pageSlider;

  @NonNull
  public final TextView pagerLeftTxt;

  @NonNull
  public final TextView pagerRightTxt;

  @NonNull
  public final ImageButton prevBookBtn;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Slider slideshowDelaySlider;

  @NonNull
  public final View viewerBottomBg;

  @NonNull
  public final Toolbar viewerPagerToolbar;

  private IncludeReaderControlsOverlayBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton favouriteActionBtn, @NonNull SubmarineView favouriteMicroMenu,
      @NonNull ImageButton galleryBtn, @NonNull ImageView imagePreviewCenter,
      @NonNull ImageView imagePreviewLeft, @NonNull ImageView imagePreviewRight,
      @NonNull ImageButton infoBtn, @NonNull SubmarineView informationMicroMenu,
      @NonNull ImageButton nextBookBtn, @NonNull Slider pageSlider, @NonNull TextView pagerLeftTxt,
      @NonNull TextView pagerRightTxt, @NonNull ImageButton prevBookBtn,
      @NonNull ProgressBar progressBar, @NonNull Slider slideshowDelaySlider,
      @NonNull View viewerBottomBg, @NonNull Toolbar viewerPagerToolbar) {
    this.rootView = rootView;
    this.favouriteActionBtn = favouriteActionBtn;
    this.favouriteMicroMenu = favouriteMicroMenu;
    this.galleryBtn = galleryBtn;
    this.imagePreviewCenter = imagePreviewCenter;
    this.imagePreviewLeft = imagePreviewLeft;
    this.imagePreviewRight = imagePreviewRight;
    this.infoBtn = infoBtn;
    this.informationMicroMenu = informationMicroMenu;
    this.nextBookBtn = nextBookBtn;
    this.pageSlider = pageSlider;
    this.pagerLeftTxt = pagerLeftTxt;
    this.pagerRightTxt = pagerRightTxt;
    this.prevBookBtn = prevBookBtn;
    this.progressBar = progressBar;
    this.slideshowDelaySlider = slideshowDelaySlider;
    this.viewerBottomBg = viewerBottomBg;
    this.viewerPagerToolbar = viewerPagerToolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static IncludeReaderControlsOverlayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static IncludeReaderControlsOverlayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.include_reader_controls_overlay, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static IncludeReaderControlsOverlayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.favourite_action_btn;
      ImageButton favouriteActionBtn = ViewBindings.findChildViewById(rootView, id);
      if (favouriteActionBtn == null) {
        break missingId;
      }

      id = R.id.favourite_micro_menu;
      SubmarineView favouriteMicroMenu = ViewBindings.findChildViewById(rootView, id);
      if (favouriteMicroMenu == null) {
        break missingId;
      }

      id = R.id.gallery_btn;
      ImageButton galleryBtn = ViewBindings.findChildViewById(rootView, id);
      if (galleryBtn == null) {
        break missingId;
      }

      id = R.id.image_preview_center;
      ImageView imagePreviewCenter = ViewBindings.findChildViewById(rootView, id);
      if (imagePreviewCenter == null) {
        break missingId;
      }

      id = R.id.image_preview_left;
      ImageView imagePreviewLeft = ViewBindings.findChildViewById(rootView, id);
      if (imagePreviewLeft == null) {
        break missingId;
      }

      id = R.id.image_preview_right;
      ImageView imagePreviewRight = ViewBindings.findChildViewById(rootView, id);
      if (imagePreviewRight == null) {
        break missingId;
      }

      id = R.id.info_btn;
      ImageButton infoBtn = ViewBindings.findChildViewById(rootView, id);
      if (infoBtn == null) {
        break missingId;
      }

      id = R.id.information_micro_menu;
      SubmarineView informationMicroMenu = ViewBindings.findChildViewById(rootView, id);
      if (informationMicroMenu == null) {
        break missingId;
      }

      id = R.id.next_book_btn;
      ImageButton nextBookBtn = ViewBindings.findChildViewById(rootView, id);
      if (nextBookBtn == null) {
        break missingId;
      }

      id = R.id.page_slider;
      Slider pageSlider = ViewBindings.findChildViewById(rootView, id);
      if (pageSlider == null) {
        break missingId;
      }

      id = R.id.pager_left_txt;
      TextView pagerLeftTxt = ViewBindings.findChildViewById(rootView, id);
      if (pagerLeftTxt == null) {
        break missingId;
      }

      id = R.id.pager_right_txt;
      TextView pagerRightTxt = ViewBindings.findChildViewById(rootView, id);
      if (pagerRightTxt == null) {
        break missingId;
      }

      id = R.id.prev_book_btn;
      ImageButton prevBookBtn = ViewBindings.findChildViewById(rootView, id);
      if (prevBookBtn == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.slideshow_delay_slider;
      Slider slideshowDelaySlider = ViewBindings.findChildViewById(rootView, id);
      if (slideshowDelaySlider == null) {
        break missingId;
      }

      id = R.id.viewer_bottom_bg;
      View viewerBottomBg = ViewBindings.findChildViewById(rootView, id);
      if (viewerBottomBg == null) {
        break missingId;
      }

      id = R.id.viewer_pager_toolbar;
      Toolbar viewerPagerToolbar = ViewBindings.findChildViewById(rootView, id);
      if (viewerPagerToolbar == null) {
        break missingId;
      }

      return new IncludeReaderControlsOverlayBinding((ConstraintLayout) rootView,
          favouriteActionBtn, favouriteMicroMenu, galleryBtn, imagePreviewCenter, imagePreviewLeft,
          imagePreviewRight, infoBtn, informationMicroMenu, nextBookBtn, pageSlider, pagerLeftTxt,
          pagerRightTxt, prevBookBtn, progressBar, slideshowDelaySlider, viewerBottomBg,
          viewerPagerToolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
