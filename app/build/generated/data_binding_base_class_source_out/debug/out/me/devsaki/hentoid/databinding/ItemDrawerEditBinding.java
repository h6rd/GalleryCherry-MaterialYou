// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;

public final class ItemDrawerEditBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CheckBox drawerItemChk;

  @NonNull
  public final ImageView drawerItemHandle;

  @NonNull
  public final ImageView drawerItemIcon;

  @NonNull
  public final TextView drawerItemTxt;

  private ItemDrawerEditBinding(@NonNull ConstraintLayout rootView, @NonNull CheckBox drawerItemChk,
      @NonNull ImageView drawerItemHandle, @NonNull ImageView drawerItemIcon,
      @NonNull TextView drawerItemTxt) {
    this.rootView = rootView;
    this.drawerItemChk = drawerItemChk;
    this.drawerItemHandle = drawerItemHandle;
    this.drawerItemIcon = drawerItemIcon;
    this.drawerItemTxt = drawerItemTxt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDrawerEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDrawerEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_drawer_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDrawerEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.drawer_item_chk;
      CheckBox drawerItemChk = ViewBindings.findChildViewById(rootView, id);
      if (drawerItemChk == null) {
        break missingId;
      }

      id = R.id.drawer_item_handle;
      ImageView drawerItemHandle = ViewBindings.findChildViewById(rootView, id);
      if (drawerItemHandle == null) {
        break missingId;
      }

      id = R.id.drawer_item_icon;
      ImageView drawerItemIcon = ViewBindings.findChildViewById(rootView, id);
      if (drawerItemIcon == null) {
        break missingId;
      }

      id = R.id.drawer_item_txt;
      TextView drawerItemTxt = ViewBindings.findChildViewById(rootView, id);
      if (drawerItemTxt == null) {
        break missingId;
      }

      return new ItemDrawerEditBinding((ConstraintLayout) rootView, drawerItemChk, drawerItemHandle,
          drawerItemIcon, drawerItemTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
