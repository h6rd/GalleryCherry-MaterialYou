// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;
import me.devsaki.hentoid.views.ListPickerView;

public final class DialogLibraryChangeGroupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton actionButton;

  @NonNull
  public final ListPickerView changeGroupExistingList;

  @NonNull
  public final RadioButton changeGroupExistingRadio;

  @NonNull
  public final TextInputLayout changeGroupNewName;

  @NonNull
  public final RadioButton changeGroupNewRadio;

  @NonNull
  public final RadioButton removeGroupRadio;

  private DialogLibraryChangeGroupBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton actionButton, @NonNull ListPickerView changeGroupExistingList,
      @NonNull RadioButton changeGroupExistingRadio, @NonNull TextInputLayout changeGroupNewName,
      @NonNull RadioButton changeGroupNewRadio, @NonNull RadioButton removeGroupRadio) {
    this.rootView = rootView;
    this.actionButton = actionButton;
    this.changeGroupExistingList = changeGroupExistingList;
    this.changeGroupExistingRadio = changeGroupExistingRadio;
    this.changeGroupNewName = changeGroupNewName;
    this.changeGroupNewRadio = changeGroupNewRadio;
    this.removeGroupRadio = removeGroupRadio;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogLibraryChangeGroupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogLibraryChangeGroupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_library_change_group, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogLibraryChangeGroupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_button;
      MaterialButton actionButton = ViewBindings.findChildViewById(rootView, id);
      if (actionButton == null) {
        break missingId;
      }

      id = R.id.change_group_existing_list;
      ListPickerView changeGroupExistingList = ViewBindings.findChildViewById(rootView, id);
      if (changeGroupExistingList == null) {
        break missingId;
      }

      id = R.id.change_group_existing_radio;
      RadioButton changeGroupExistingRadio = ViewBindings.findChildViewById(rootView, id);
      if (changeGroupExistingRadio == null) {
        break missingId;
      }

      id = R.id.change_group_new_name;
      TextInputLayout changeGroupNewName = ViewBindings.findChildViewById(rootView, id);
      if (changeGroupNewName == null) {
        break missingId;
      }

      id = R.id.change_group_new_radio;
      RadioButton changeGroupNewRadio = ViewBindings.findChildViewById(rootView, id);
      if (changeGroupNewRadio == null) {
        break missingId;
      }

      id = R.id.remove_group_radio;
      RadioButton removeGroupRadio = ViewBindings.findChildViewById(rootView, id);
      if (removeGroupRadio == null) {
        break missingId;
      }

      return new DialogLibraryChangeGroupBinding((ConstraintLayout) rootView, actionButton,
          changeGroupExistingList, changeGroupExistingRadio, changeGroupNewName,
          changeGroupNewRadio, removeGroupRadio);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
