// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;

public final class ItemQueueBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView deleteBtn;

  @NonNull
  public final FrameLayout item;

  @NonNull
  public final ConstraintLayout itemCard;

  @NonNull
  public final ImageView ivCover;

  @NonNull
  public final ImageView ivError;

  @NonNull
  public final ImageView ivFlag;

  @NonNull
  public final ImageView ivOnline;

  @NonNull
  public final ImageView ivRedownload;

  @NonNull
  public final ImageView ivReorder;

  @NonNull
  public final ProgressBar pbDownload;

  @NonNull
  public final ImageView queueBottomBtn;

  @NonNull
  public final ImageView queueSiteButton;

  @NonNull
  public final ImageView queueTopBtn;

  @NonNull
  public final TextView tvArtist;

  @NonNull
  public final TextView tvPages;

  @NonNull
  public final TextView tvTitle;

  private ItemQueueBinding(@NonNull FrameLayout rootView, @NonNull ImageView deleteBtn,
      @NonNull FrameLayout item, @NonNull ConstraintLayout itemCard, @NonNull ImageView ivCover,
      @NonNull ImageView ivError, @NonNull ImageView ivFlag, @NonNull ImageView ivOnline,
      @NonNull ImageView ivRedownload, @NonNull ImageView ivReorder,
      @NonNull ProgressBar pbDownload, @NonNull ImageView queueBottomBtn,
      @NonNull ImageView queueSiteButton, @NonNull ImageView queueTopBtn,
      @NonNull TextView tvArtist, @NonNull TextView tvPages, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.deleteBtn = deleteBtn;
    this.item = item;
    this.itemCard = itemCard;
    this.ivCover = ivCover;
    this.ivError = ivError;
    this.ivFlag = ivFlag;
    this.ivOnline = ivOnline;
    this.ivRedownload = ivRedownload;
    this.ivReorder = ivReorder;
    this.pbDownload = pbDownload;
    this.queueBottomBtn = queueBottomBtn;
    this.queueSiteButton = queueSiteButton;
    this.queueTopBtn = queueTopBtn;
    this.tvArtist = tvArtist;
    this.tvPages = tvPages;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemQueueBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemQueueBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_queue, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemQueueBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delete_btn;
      ImageView deleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtn == null) {
        break missingId;
      }

      FrameLayout item = (FrameLayout) rootView;

      id = R.id.item_card;
      ConstraintLayout itemCard = ViewBindings.findChildViewById(rootView, id);
      if (itemCard == null) {
        break missingId;
      }

      id = R.id.ivCover;
      ImageView ivCover = ViewBindings.findChildViewById(rootView, id);
      if (ivCover == null) {
        break missingId;
      }

      id = R.id.ivError;
      ImageView ivError = ViewBindings.findChildViewById(rootView, id);
      if (ivError == null) {
        break missingId;
      }

      id = R.id.ivFlag;
      ImageView ivFlag = ViewBindings.findChildViewById(rootView, id);
      if (ivFlag == null) {
        break missingId;
      }

      id = R.id.ivOnline;
      ImageView ivOnline = ViewBindings.findChildViewById(rootView, id);
      if (ivOnline == null) {
        break missingId;
      }

      id = R.id.ivRedownload;
      ImageView ivRedownload = ViewBindings.findChildViewById(rootView, id);
      if (ivRedownload == null) {
        break missingId;
      }

      id = R.id.ivReorder;
      ImageView ivReorder = ViewBindings.findChildViewById(rootView, id);
      if (ivReorder == null) {
        break missingId;
      }

      id = R.id.pbDownload;
      ProgressBar pbDownload = ViewBindings.findChildViewById(rootView, id);
      if (pbDownload == null) {
        break missingId;
      }

      id = R.id.queueBottomBtn;
      ImageView queueBottomBtn = ViewBindings.findChildViewById(rootView, id);
      if (queueBottomBtn == null) {
        break missingId;
      }

      id = R.id.queue_site_button;
      ImageView queueSiteButton = ViewBindings.findChildViewById(rootView, id);
      if (queueSiteButton == null) {
        break missingId;
      }

      id = R.id.queueTopBtn;
      ImageView queueTopBtn = ViewBindings.findChildViewById(rootView, id);
      if (queueTopBtn == null) {
        break missingId;
      }

      id = R.id.tvArtist;
      TextView tvArtist = ViewBindings.findChildViewById(rootView, id);
      if (tvArtist == null) {
        break missingId;
      }

      id = R.id.tvPages;
      TextView tvPages = ViewBindings.findChildViewById(rootView, id);
      if (tvPages == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ItemQueueBinding((FrameLayout) rootView, deleteBtn, item, itemCard, ivCover,
          ivError, ivFlag, ivOnline, ivRedownload, ivReorder, pbDownload, queueBottomBtn,
          queueSiteButton, queueTopBtn, tvArtist, tvPages, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
