// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;

public final class ActivityAboutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView aboutText1;

  @NonNull
  public final ImageView appLogo;

  @NonNull
  public final TextView changelogButton;

  @NonNull
  public final ImageView discordIcon;

  @NonNull
  public final TextView discordText;

  @NonNull
  public final ImageView githubIcon;

  @NonNull
  public final TextView githubText;

  @NonNull
  public final TextView licensesButton;

  @NonNull
  public final TextView personalDataStatement1;

  @NonNull
  public final TextView personalDataStatement2;

  @NonNull
  public final TextView personalDataStatement3;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvChromeVersionName;

  @NonNull
  public final TextView tvVersionName;

  private ActivityAboutBinding(@NonNull ConstraintLayout rootView, @NonNull TextView aboutText1,
      @NonNull ImageView appLogo, @NonNull TextView changelogButton, @NonNull ImageView discordIcon,
      @NonNull TextView discordText, @NonNull ImageView githubIcon, @NonNull TextView githubText,
      @NonNull TextView licensesButton, @NonNull TextView personalDataStatement1,
      @NonNull TextView personalDataStatement2, @NonNull TextView personalDataStatement3,
      @NonNull Toolbar toolbar, @NonNull TextView tvChromeVersionName,
      @NonNull TextView tvVersionName) {
    this.rootView = rootView;
    this.aboutText1 = aboutText1;
    this.appLogo = appLogo;
    this.changelogButton = changelogButton;
    this.discordIcon = discordIcon;
    this.discordText = discordText;
    this.githubIcon = githubIcon;
    this.githubText = githubText;
    this.licensesButton = licensesButton;
    this.personalDataStatement1 = personalDataStatement1;
    this.personalDataStatement2 = personalDataStatement2;
    this.personalDataStatement3 = personalDataStatement3;
    this.toolbar = toolbar;
    this.tvChromeVersionName = tvChromeVersionName;
    this.tvVersionName = tvVersionName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAboutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAboutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_about, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAboutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.aboutText1;
      TextView aboutText1 = ViewBindings.findChildViewById(rootView, id);
      if (aboutText1 == null) {
        break missingId;
      }

      id = R.id.appLogo;
      ImageView appLogo = ViewBindings.findChildViewById(rootView, id);
      if (appLogo == null) {
        break missingId;
      }

      id = R.id.changelogButton;
      TextView changelogButton = ViewBindings.findChildViewById(rootView, id);
      if (changelogButton == null) {
        break missingId;
      }

      id = R.id.discordIcon;
      ImageView discordIcon = ViewBindings.findChildViewById(rootView, id);
      if (discordIcon == null) {
        break missingId;
      }

      id = R.id.discordText;
      TextView discordText = ViewBindings.findChildViewById(rootView, id);
      if (discordText == null) {
        break missingId;
      }

      id = R.id.githubIcon;
      ImageView githubIcon = ViewBindings.findChildViewById(rootView, id);
      if (githubIcon == null) {
        break missingId;
      }

      id = R.id.githubText;
      TextView githubText = ViewBindings.findChildViewById(rootView, id);
      if (githubText == null) {
        break missingId;
      }

      id = R.id.licensesButton;
      TextView licensesButton = ViewBindings.findChildViewById(rootView, id);
      if (licensesButton == null) {
        break missingId;
      }

      id = R.id.personalDataStatement1;
      TextView personalDataStatement1 = ViewBindings.findChildViewById(rootView, id);
      if (personalDataStatement1 == null) {
        break missingId;
      }

      id = R.id.personalDataStatement2;
      TextView personalDataStatement2 = ViewBindings.findChildViewById(rootView, id);
      if (personalDataStatement2 == null) {
        break missingId;
      }

      id = R.id.personalDataStatement3;
      TextView personalDataStatement3 = ViewBindings.findChildViewById(rootView, id);
      if (personalDataStatement3 == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tv_chrome_version_name;
      TextView tvChromeVersionName = ViewBindings.findChildViewById(rootView, id);
      if (tvChromeVersionName == null) {
        break missingId;
      }

      id = R.id.tv_version_name;
      TextView tvVersionName = ViewBindings.findChildViewById(rootView, id);
      if (tvVersionName == null) {
        break missingId;
      }

      return new ActivityAboutBinding((ConstraintLayout) rootView, aboutText1, appLogo,
          changelogButton, discordIcon, discordText, githubIcon, githubText, licensesButton,
          personalDataStatement1, personalDataStatement2, personalDataStatement3, toolbar,
          tvChromeVersionName, tvVersionName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
