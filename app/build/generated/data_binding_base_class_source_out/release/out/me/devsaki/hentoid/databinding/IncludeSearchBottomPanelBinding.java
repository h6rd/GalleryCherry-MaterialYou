// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SearchView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;
import me.devsaki.hentoid.views.MaxHeightRecyclerView;

public final class IncludeSearchBottomPanelBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final SearchView tagFilter;

  @NonNull
  public final MaxHeightRecyclerView tagSuggestion;

  @NonNull
  public final TextView tagWaitDescription;

  @NonNull
  public final ImageView tagWaitImage;

  @NonNull
  public final Group tagWaitPanel;

  @NonNull
  public final TextView tagWaitTitle;

  private IncludeSearchBottomPanelBinding(@NonNull ConstraintLayout rootView,
      @NonNull SearchView tagFilter, @NonNull MaxHeightRecyclerView tagSuggestion,
      @NonNull TextView tagWaitDescription, @NonNull ImageView tagWaitImage,
      @NonNull Group tagWaitPanel, @NonNull TextView tagWaitTitle) {
    this.rootView = rootView;
    this.tagFilter = tagFilter;
    this.tagSuggestion = tagSuggestion;
    this.tagWaitDescription = tagWaitDescription;
    this.tagWaitImage = tagWaitImage;
    this.tagWaitPanel = tagWaitPanel;
    this.tagWaitTitle = tagWaitTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static IncludeSearchBottomPanelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static IncludeSearchBottomPanelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.include_search_bottom_panel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static IncludeSearchBottomPanelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tag_filter;
      SearchView tagFilter = ViewBindings.findChildViewById(rootView, id);
      if (tagFilter == null) {
        break missingId;
      }

      id = R.id.tag_suggestion;
      MaxHeightRecyclerView tagSuggestion = ViewBindings.findChildViewById(rootView, id);
      if (tagSuggestion == null) {
        break missingId;
      }

      id = R.id.tag_wait_description;
      TextView tagWaitDescription = ViewBindings.findChildViewById(rootView, id);
      if (tagWaitDescription == null) {
        break missingId;
      }

      id = R.id.tag_wait_image;
      ImageView tagWaitImage = ViewBindings.findChildViewById(rootView, id);
      if (tagWaitImage == null) {
        break missingId;
      }

      id = R.id.tag_wait_panel;
      Group tagWaitPanel = ViewBindings.findChildViewById(rootView, id);
      if (tagWaitPanel == null) {
        break missingId;
      }

      id = R.id.tag_wait_title;
      TextView tagWaitTitle = ViewBindings.findChildViewById(rootView, id);
      if (tagWaitTitle == null) {
        break missingId;
      }

      return new IncludeSearchBottomPanelBinding((ConstraintLayout) rootView, tagFilter,
          tagSuggestion, tagWaitDescription, tagWaitImage, tagWaitPanel, tagWaitTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
