// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;

public final class DialogPrefsDlStrategyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton actionButton;

  @NonNull
  public final MaterialButton choiceBalance;

  @NonNull
  public final MaterialButton choiceFallover;

  @NonNull
  public final TextView description;

  @NonNull
  public final MaterialButtonToggleGroup selector;

  @NonNull
  public final TextInputLayout threshold;

  private DialogPrefsDlStrategyBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton actionButton, @NonNull MaterialButton choiceBalance,
      @NonNull MaterialButton choiceFallover, @NonNull TextView description,
      @NonNull MaterialButtonToggleGroup selector, @NonNull TextInputLayout threshold) {
    this.rootView = rootView;
    this.actionButton = actionButton;
    this.choiceBalance = choiceBalance;
    this.choiceFallover = choiceFallover;
    this.description = description;
    this.selector = selector;
    this.threshold = threshold;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogPrefsDlStrategyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogPrefsDlStrategyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_prefs_dl_strategy, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogPrefsDlStrategyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_button;
      MaterialButton actionButton = ViewBindings.findChildViewById(rootView, id);
      if (actionButton == null) {
        break missingId;
      }

      id = R.id.choice_balance;
      MaterialButton choiceBalance = ViewBindings.findChildViewById(rootView, id);
      if (choiceBalance == null) {
        break missingId;
      }

      id = R.id.choice_fallover;
      MaterialButton choiceFallover = ViewBindings.findChildViewById(rootView, id);
      if (choiceFallover == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.selector;
      MaterialButtonToggleGroup selector = ViewBindings.findChildViewById(rootView, id);
      if (selector == null) {
        break missingId;
      }

      id = R.id.threshold;
      TextInputLayout threshold = ViewBindings.findChildViewById(rootView, id);
      if (threshold == null) {
        break missingId;
      }

      return new DialogPrefsDlStrategyBinding((ConstraintLayout) rootView, actionButton,
          choiceBalance, choiceFallover, description, selector, threshold);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
