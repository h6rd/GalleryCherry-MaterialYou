// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;
import me.devsaki.hentoid.views.MaxHeightRecyclerView;

public final class DialogWebBookmarksBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton bookmarkCurrentBtn;

  @NonNull
  public final MaterialButton bookmarkHomepageBtn;

  @NonNull
  public final MaxHeightRecyclerView bookmarksList;

  @NonNull
  public final Toolbar toolbar;

  private DialogWebBookmarksBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton bookmarkCurrentBtn, @NonNull MaterialButton bookmarkHomepageBtn,
      @NonNull MaxHeightRecyclerView bookmarksList, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.bookmarkCurrentBtn = bookmarkCurrentBtn;
    this.bookmarkHomepageBtn = bookmarkHomepageBtn;
    this.bookmarksList = bookmarksList;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogWebBookmarksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogWebBookmarksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_web_bookmarks, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogWebBookmarksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookmark_current_btn;
      MaterialButton bookmarkCurrentBtn = ViewBindings.findChildViewById(rootView, id);
      if (bookmarkCurrentBtn == null) {
        break missingId;
      }

      id = R.id.bookmark_homepage_btn;
      MaterialButton bookmarkHomepageBtn = ViewBindings.findChildViewById(rootView, id);
      if (bookmarkHomepageBtn == null) {
        break missingId;
      }

      id = R.id.bookmarks_list;
      MaxHeightRecyclerView bookmarksList = ViewBindings.findChildViewById(rootView, id);
      if (bookmarksList == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new DialogWebBookmarksBinding((ConstraintLayout) rootView, bookmarkCurrentBtn,
          bookmarkHomepageBtn, bookmarksList, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
