// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;

public final class DialogToolsSettingsImportBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView importFileInvalidText;

  @NonNull
  public final TextView importTitle;

  @NonNull
  public final MaterialButton selectFileBtn;

  private DialogToolsSettingsImportBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView importFileInvalidText, @NonNull TextView importTitle,
      @NonNull MaterialButton selectFileBtn) {
    this.rootView = rootView;
    this.importFileInvalidText = importFileInvalidText;
    this.importTitle = importTitle;
    this.selectFileBtn = selectFileBtn;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogToolsSettingsImportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogToolsSettingsImportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_tools_settings_import, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogToolsSettingsImportBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.import_file_invalid_text;
      TextView importFileInvalidText = ViewBindings.findChildViewById(rootView, id);
      if (importFileInvalidText == null) {
        break missingId;
      }

      id = R.id.import_title;
      TextView importTitle = ViewBindings.findChildViewById(rootView, id);
      if (importTitle == null) {
        break missingId;
      }

      id = R.id.select_file_btn;
      MaterialButton selectFileBtn = ViewBindings.findChildViewById(rootView, id);
      if (selectFileBtn == null) {
        break missingId;
      }

      return new DialogToolsSettingsImportBinding((ConstraintLayout) rootView,
          importFileInvalidText, importTitle, selectFileBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
