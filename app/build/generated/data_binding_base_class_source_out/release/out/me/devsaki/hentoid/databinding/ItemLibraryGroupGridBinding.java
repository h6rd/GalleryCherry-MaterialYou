// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;

public final class ItemLibraryGroupGridBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout item;

  @NonNull
  public final ImageView ivCover;

  @NonNull
  public final ImageView ivFavourite;

  @NonNull
  public final ImageView ivRating;

  @NonNull
  public final TextView tvTitle;

  private ItemLibraryGroupGridBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout item, @NonNull ImageView ivCover, @NonNull ImageView ivFavourite,
      @NonNull ImageView ivRating, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.item = item;
    this.ivCover = ivCover;
    this.ivFavourite = ivFavourite;
    this.ivRating = ivRating;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemLibraryGroupGridBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemLibraryGroupGridBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_library_group_grid, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemLibraryGroupGridBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout item = (ConstraintLayout) rootView;

      id = R.id.ivCover;
      ImageView ivCover = ViewBindings.findChildViewById(rootView, id);
      if (ivCover == null) {
        break missingId;
      }

      id = R.id.ivFavourite;
      ImageView ivFavourite = ViewBindings.findChildViewById(rootView, id);
      if (ivFavourite == null) {
        break missingId;
      }

      id = R.id.iv_rating;
      ImageView ivRating = ViewBindings.findChildViewById(rootView, id);
      if (ivRating == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ItemLibraryGroupGridBinding((ConstraintLayout) rootView, item, ivCover,
          ivFavourite, ivRating, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
