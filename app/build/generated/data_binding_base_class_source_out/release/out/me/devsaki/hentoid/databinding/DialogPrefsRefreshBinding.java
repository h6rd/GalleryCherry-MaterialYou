// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.materialswitch.MaterialSwitch;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;

public final class DialogPrefsRefreshBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialButton actionButton;

  @NonNull
  public final TextView refreshCaption;

  @NonNull
  public final MaterialSwitch refreshOptions;

  @NonNull
  public final CheckBox refreshOptionsRemove1;

  @NonNull
  public final CheckBox refreshOptionsRemove2;

  @NonNull
  public final CheckBox refreshOptionsRemovePlaceholders;

  @NonNull
  public final CheckBox refreshOptionsRename;

  @NonNull
  public final CheckBox refreshOptionsRenumberPages;

  @NonNull
  public final Group refreshOptionsSubgroup;

  @NonNull
  public final TextView refreshRenumberWarningTxt;

  @NonNull
  public final ImageView warningImg;

  private DialogPrefsRefreshBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialButton actionButton, @NonNull TextView refreshCaption,
      @NonNull MaterialSwitch refreshOptions, @NonNull CheckBox refreshOptionsRemove1,
      @NonNull CheckBox refreshOptionsRemove2, @NonNull CheckBox refreshOptionsRemovePlaceholders,
      @NonNull CheckBox refreshOptionsRename, @NonNull CheckBox refreshOptionsRenumberPages,
      @NonNull Group refreshOptionsSubgroup, @NonNull TextView refreshRenumberWarningTxt,
      @NonNull ImageView warningImg) {
    this.rootView = rootView;
    this.actionButton = actionButton;
    this.refreshCaption = refreshCaption;
    this.refreshOptions = refreshOptions;
    this.refreshOptionsRemove1 = refreshOptionsRemove1;
    this.refreshOptionsRemove2 = refreshOptionsRemove2;
    this.refreshOptionsRemovePlaceholders = refreshOptionsRemovePlaceholders;
    this.refreshOptionsRename = refreshOptionsRename;
    this.refreshOptionsRenumberPages = refreshOptionsRenumberPages;
    this.refreshOptionsSubgroup = refreshOptionsSubgroup;
    this.refreshRenumberWarningTxt = refreshRenumberWarningTxt;
    this.warningImg = warningImg;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogPrefsRefreshBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogPrefsRefreshBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_prefs_refresh, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogPrefsRefreshBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_button;
      MaterialButton actionButton = ViewBindings.findChildViewById(rootView, id);
      if (actionButton == null) {
        break missingId;
      }

      id = R.id.refresh_caption;
      TextView refreshCaption = ViewBindings.findChildViewById(rootView, id);
      if (refreshCaption == null) {
        break missingId;
      }

      id = R.id.refresh_options;
      MaterialSwitch refreshOptions = ViewBindings.findChildViewById(rootView, id);
      if (refreshOptions == null) {
        break missingId;
      }

      id = R.id.refresh_options_remove_1;
      CheckBox refreshOptionsRemove1 = ViewBindings.findChildViewById(rootView, id);
      if (refreshOptionsRemove1 == null) {
        break missingId;
      }

      id = R.id.refresh_options_remove_2;
      CheckBox refreshOptionsRemove2 = ViewBindings.findChildViewById(rootView, id);
      if (refreshOptionsRemove2 == null) {
        break missingId;
      }

      id = R.id.refresh_options_remove_placeholders;
      CheckBox refreshOptionsRemovePlaceholders = ViewBindings.findChildViewById(rootView, id);
      if (refreshOptionsRemovePlaceholders == null) {
        break missingId;
      }

      id = R.id.refresh_options_rename;
      CheckBox refreshOptionsRename = ViewBindings.findChildViewById(rootView, id);
      if (refreshOptionsRename == null) {
        break missingId;
      }

      id = R.id.refresh_options_renumber_pages;
      CheckBox refreshOptionsRenumberPages = ViewBindings.findChildViewById(rootView, id);
      if (refreshOptionsRenumberPages == null) {
        break missingId;
      }

      id = R.id.refresh_options_subgroup;
      Group refreshOptionsSubgroup = ViewBindings.findChildViewById(rootView, id);
      if (refreshOptionsSubgroup == null) {
        break missingId;
      }

      id = R.id.refresh_renumber_warning_txt;
      TextView refreshRenumberWarningTxt = ViewBindings.findChildViewById(rootView, id);
      if (refreshRenumberWarningTxt == null) {
        break missingId;
      }

      id = R.id.warning_img;
      ImageView warningImg = ViewBindings.findChildViewById(rootView, id);
      if (warningImg == null) {
        break missingId;
      }

      return new DialogPrefsRefreshBinding((ConstraintLayout) rootView, actionButton,
          refreshCaption, refreshOptions, refreshOptionsRemove1, refreshOptionsRemove2,
          refreshOptionsRemovePlaceholders, refreshOptionsRename, refreshOptionsRenumberPages,
          refreshOptionsSubgroup, refreshRenumberWarningTxt, warningImg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
