// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.materialswitch.MaterialSwitch;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;

public final class ItemDuplicateDetailBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextView artistScore;

  @NonNull
  public final TextView coverScore;

  @NonNull
  public final TextView deleteBtn;

  @NonNull
  public final Guideline guidelineMiddle;

  @NonNull
  public final FrameLayout item;

  @NonNull
  public final ConstraintLayout itemCard;

  @NonNull
  public final ImageView ivCover;

  @NonNull
  public final ImageView ivExternal;

  @NonNull
  public final ImageView ivFavourite;

  @NonNull
  public final ImageView ivFlag;

  @NonNull
  public final ImageView ivSite;

  @NonNull
  public final TextView keepBtn;

  @NonNull
  public final MaterialSwitch keepDelete;

  @NonNull
  public final Group keepDeleteGroup;

  @NonNull
  public final Group scores;

  @NonNull
  public final TextView titleScore;

  @NonNull
  public final TextView totalScore;

  @NonNull
  public final TextView tvArtist;

  @NonNull
  public final TextView tvLaunchCode;

  @NonNull
  public final TextView tvPages;

  @NonNull
  public final TextView tvTitle;

  private ItemDuplicateDetailBinding(@NonNull FrameLayout rootView, @NonNull TextView artistScore,
      @NonNull TextView coverScore, @NonNull TextView deleteBtn, @NonNull Guideline guidelineMiddle,
      @NonNull FrameLayout item, @NonNull ConstraintLayout itemCard, @NonNull ImageView ivCover,
      @NonNull ImageView ivExternal, @NonNull ImageView ivFavourite, @NonNull ImageView ivFlag,
      @NonNull ImageView ivSite, @NonNull TextView keepBtn, @NonNull MaterialSwitch keepDelete,
      @NonNull Group keepDeleteGroup, @NonNull Group scores, @NonNull TextView titleScore,
      @NonNull TextView totalScore, @NonNull TextView tvArtist, @NonNull TextView tvLaunchCode,
      @NonNull TextView tvPages, @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.artistScore = artistScore;
    this.coverScore = coverScore;
    this.deleteBtn = deleteBtn;
    this.guidelineMiddle = guidelineMiddle;
    this.item = item;
    this.itemCard = itemCard;
    this.ivCover = ivCover;
    this.ivExternal = ivExternal;
    this.ivFavourite = ivFavourite;
    this.ivFlag = ivFlag;
    this.ivSite = ivSite;
    this.keepBtn = keepBtn;
    this.keepDelete = keepDelete;
    this.keepDeleteGroup = keepDeleteGroup;
    this.scores = scores;
    this.titleScore = titleScore;
    this.totalScore = totalScore;
    this.tvArtist = tvArtist;
    this.tvLaunchCode = tvLaunchCode;
    this.tvPages = tvPages;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDuplicateDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDuplicateDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_duplicate_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDuplicateDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.artist_score;
      TextView artistScore = ViewBindings.findChildViewById(rootView, id);
      if (artistScore == null) {
        break missingId;
      }

      id = R.id.cover_score;
      TextView coverScore = ViewBindings.findChildViewById(rootView, id);
      if (coverScore == null) {
        break missingId;
      }

      id = R.id.delete_btn;
      TextView deleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtn == null) {
        break missingId;
      }

      id = R.id.guideline_middle;
      Guideline guidelineMiddle = ViewBindings.findChildViewById(rootView, id);
      if (guidelineMiddle == null) {
        break missingId;
      }

      FrameLayout item = (FrameLayout) rootView;

      id = R.id.item_card;
      ConstraintLayout itemCard = ViewBindings.findChildViewById(rootView, id);
      if (itemCard == null) {
        break missingId;
      }

      id = R.id.ivCover;
      ImageView ivCover = ViewBindings.findChildViewById(rootView, id);
      if (ivCover == null) {
        break missingId;
      }

      id = R.id.ivExternal;
      ImageView ivExternal = ViewBindings.findChildViewById(rootView, id);
      if (ivExternal == null) {
        break missingId;
      }

      id = R.id.ivFavourite;
      ImageView ivFavourite = ViewBindings.findChildViewById(rootView, id);
      if (ivFavourite == null) {
        break missingId;
      }

      id = R.id.ivFlag;
      ImageView ivFlag = ViewBindings.findChildViewById(rootView, id);
      if (ivFlag == null) {
        break missingId;
      }

      id = R.id.ivSite;
      ImageView ivSite = ViewBindings.findChildViewById(rootView, id);
      if (ivSite == null) {
        break missingId;
      }

      id = R.id.keep_btn;
      TextView keepBtn = ViewBindings.findChildViewById(rootView, id);
      if (keepBtn == null) {
        break missingId;
      }

      id = R.id.keep_delete;
      MaterialSwitch keepDelete = ViewBindings.findChildViewById(rootView, id);
      if (keepDelete == null) {
        break missingId;
      }

      id = R.id.keep_delete_group;
      Group keepDeleteGroup = ViewBindings.findChildViewById(rootView, id);
      if (keepDeleteGroup == null) {
        break missingId;
      }

      id = R.id.scores;
      Group scores = ViewBindings.findChildViewById(rootView, id);
      if (scores == null) {
        break missingId;
      }

      id = R.id.title_score;
      TextView titleScore = ViewBindings.findChildViewById(rootView, id);
      if (titleScore == null) {
        break missingId;
      }

      id = R.id.total_score;
      TextView totalScore = ViewBindings.findChildViewById(rootView, id);
      if (totalScore == null) {
        break missingId;
      }

      id = R.id.tvArtist;
      TextView tvArtist = ViewBindings.findChildViewById(rootView, id);
      if (tvArtist == null) {
        break missingId;
      }

      id = R.id.tvLaunchCode;
      TextView tvLaunchCode = ViewBindings.findChildViewById(rootView, id);
      if (tvLaunchCode == null) {
        break missingId;
      }

      id = R.id.tvPages;
      TextView tvPages = ViewBindings.findChildViewById(rootView, id);
      if (tvPages == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new ItemDuplicateDetailBinding((FrameLayout) rootView, artistScore, coverScore,
          deleteBtn, guidelineMiddle, item, itemCard, ivCover, ivExternal, ivFavourite, ivFlag,
          ivSite, keepBtn, keepDelete, keepDeleteGroup, scores, titleScore, totalScore, tvArtist,
          tvLaunchCode, tvPages, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
