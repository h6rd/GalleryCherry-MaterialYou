// Generated by view binder compiler. Do not edit!
package me.devsaki.hentoid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.devsaki.hentoid.R;

public final class DialogWebDuplicateBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Barrier barrier;

  @NonNull
  public final MaterialButton cancelBtn;

  @NonNull
  public final CheckBox chAlwaysDownload;

  @NonNull
  public final CheckBox chNeverExtraOnDupes;

  @NonNull
  public final View divider;

  @NonNull
  public final MaterialButton downloadBtn;

  @NonNull
  public final MaterialButton downloadPlusBtn;

  @NonNull
  public final ImageView ivCover;

  @NonNull
  public final ImageView ivExternal;

  @NonNull
  public final ImageView ivFavourite;

  @NonNull
  public final ImageView ivFlag;

  @NonNull
  public final ImageView ivSite;

  @NonNull
  public final MaterialButton replaceBtn;

  @NonNull
  public final TextView subtitle;

  @NonNull
  public final TextView title;

  @NonNull
  public final TextView tvArtist;

  @NonNull
  public final TextView tvPagesLibrary;

  @NonNull
  public final TextView tvPagesSource;

  @NonNull
  public final TextView tvScore;

  @NonNull
  public final TextView tvTitle;

  private DialogWebDuplicateBinding(@NonNull ConstraintLayout rootView, @NonNull Barrier barrier,
      @NonNull MaterialButton cancelBtn, @NonNull CheckBox chAlwaysDownload,
      @NonNull CheckBox chNeverExtraOnDupes, @NonNull View divider,
      @NonNull MaterialButton downloadBtn, @NonNull MaterialButton downloadPlusBtn,
      @NonNull ImageView ivCover, @NonNull ImageView ivExternal, @NonNull ImageView ivFavourite,
      @NonNull ImageView ivFlag, @NonNull ImageView ivSite, @NonNull MaterialButton replaceBtn,
      @NonNull TextView subtitle, @NonNull TextView title, @NonNull TextView tvArtist,
      @NonNull TextView tvPagesLibrary, @NonNull TextView tvPagesSource, @NonNull TextView tvScore,
      @NonNull TextView tvTitle) {
    this.rootView = rootView;
    this.barrier = barrier;
    this.cancelBtn = cancelBtn;
    this.chAlwaysDownload = chAlwaysDownload;
    this.chNeverExtraOnDupes = chNeverExtraOnDupes;
    this.divider = divider;
    this.downloadBtn = downloadBtn;
    this.downloadPlusBtn = downloadPlusBtn;
    this.ivCover = ivCover;
    this.ivExternal = ivExternal;
    this.ivFavourite = ivFavourite;
    this.ivFlag = ivFlag;
    this.ivSite = ivSite;
    this.replaceBtn = replaceBtn;
    this.subtitle = subtitle;
    this.title = title;
    this.tvArtist = tvArtist;
    this.tvPagesLibrary = tvPagesLibrary;
    this.tvPagesSource = tvPagesSource;
    this.tvScore = tvScore;
    this.tvTitle = tvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogWebDuplicateBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogWebDuplicateBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_web_duplicate, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogWebDuplicateBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.barrier;
      Barrier barrier = ViewBindings.findChildViewById(rootView, id);
      if (barrier == null) {
        break missingId;
      }

      id = R.id.cancel_btn;
      MaterialButton cancelBtn = ViewBindings.findChildViewById(rootView, id);
      if (cancelBtn == null) {
        break missingId;
      }

      id = R.id.ch_always_download;
      CheckBox chAlwaysDownload = ViewBindings.findChildViewById(rootView, id);
      if (chAlwaysDownload == null) {
        break missingId;
      }

      id = R.id.ch_never_extra_on_dupes;
      CheckBox chNeverExtraOnDupes = ViewBindings.findChildViewById(rootView, id);
      if (chNeverExtraOnDupes == null) {
        break missingId;
      }

      id = R.id.divider;
      View divider = ViewBindings.findChildViewById(rootView, id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.download_btn;
      MaterialButton downloadBtn = ViewBindings.findChildViewById(rootView, id);
      if (downloadBtn == null) {
        break missingId;
      }

      id = R.id.download_plus_btn;
      MaterialButton downloadPlusBtn = ViewBindings.findChildViewById(rootView, id);
      if (downloadPlusBtn == null) {
        break missingId;
      }

      id = R.id.ivCover;
      ImageView ivCover = ViewBindings.findChildViewById(rootView, id);
      if (ivCover == null) {
        break missingId;
      }

      id = R.id.ivExternal;
      ImageView ivExternal = ViewBindings.findChildViewById(rootView, id);
      if (ivExternal == null) {
        break missingId;
      }

      id = R.id.ivFavourite;
      ImageView ivFavourite = ViewBindings.findChildViewById(rootView, id);
      if (ivFavourite == null) {
        break missingId;
      }

      id = R.id.ivFlag;
      ImageView ivFlag = ViewBindings.findChildViewById(rootView, id);
      if (ivFlag == null) {
        break missingId;
      }

      id = R.id.ivSite;
      ImageView ivSite = ViewBindings.findChildViewById(rootView, id);
      if (ivSite == null) {
        break missingId;
      }

      id = R.id.replace_btn;
      MaterialButton replaceBtn = ViewBindings.findChildViewById(rootView, id);
      if (replaceBtn == null) {
        break missingId;
      }

      id = R.id.subtitle;
      TextView subtitle = ViewBindings.findChildViewById(rootView, id);
      if (subtitle == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.tvArtist;
      TextView tvArtist = ViewBindings.findChildViewById(rootView, id);
      if (tvArtist == null) {
        break missingId;
      }

      id = R.id.tvPagesLibrary;
      TextView tvPagesLibrary = ViewBindings.findChildViewById(rootView, id);
      if (tvPagesLibrary == null) {
        break missingId;
      }

      id = R.id.tvPagesSource;
      TextView tvPagesSource = ViewBindings.findChildViewById(rootView, id);
      if (tvPagesSource == null) {
        break missingId;
      }

      id = R.id.tvScore;
      TextView tvScore = ViewBindings.findChildViewById(rootView, id);
      if (tvScore == null) {
        break missingId;
      }

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      return new DialogWebDuplicateBinding((ConstraintLayout) rootView, barrier, cancelBtn,
          chAlwaysDownload, chNeverExtraOnDupes, divider, downloadBtn, downloadPlusBtn, ivCover,
          ivExternal, ivFavourite, ivFlag, ivSite, replaceBtn, subtitle, title, tvArtist,
          tvPagesLibrary, tvPagesSource, tvScore, tvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
